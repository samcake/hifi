<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  surfaceGeometry_makeLinearDepth.frag
//
//  Created by Sam Gateau on 6/3/16.
//  Copyright 2016 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/ShaderConstants.h@>
<@include render-utils/ShaderConstants.h@>


<@include DeferredTransform.slh@>
<$declareDeferredFrameTransform()$>

// pixel shader
#ifdef GPU_PIXEL_SHADER
// Stereo variant
#ifdef GPU_TRANSFORM_IS_STEREO
// With stereo camera provided
#ifdef GPU_TRANSFORM_STEREO_CAMERA

// Stereo camera is available and the current invocation of the pixel shader is side specific
layout(location = GPU_ATTR_V2F_STEREO_SIDE) flat in int _stereoSide;

// gpu_StereoSide()
// THe side of stereo is 0 for left, 1 for right
int gpu_StereoSide() {
    return _stereoSide;
}

#endif
#else
// gpu_StereoSide()
// THe side of stereo is 0 for left, 1 for right
int gpu_StereoSide() { return 0; }
#endif
#endif // GPU_PIXEL_SHADER

LAYOUT(binding=RENDER_UTILS_TEXTURE_SG_DEPTH) uniform sampler2DArray depthMap;

layout(location=0) out vec4 outFragColor;

void main(void) {
    float Zdb = texelFetch(depthMap, ivec3(gl_FragCoord.xy, gpu_StereoSide()), 0).x;
    float Zeye = -evalZeyeFromZdb(Zdb);
    outFragColor = vec4(Zeye, 0.0, 0.0, 1.0);
}

